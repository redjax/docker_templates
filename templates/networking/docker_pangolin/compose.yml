---
## https://github.com/fosrl/pangolin/blob/main/docker-compose.example.yml
name: pangolin

networks:
  default:
    driver: bridge
    name: pangolin

services:
  pangolin:
    image: fosrl/pangolin:latest
    container_name: pangolin
    restart: unless-stopped
    volumes:
      - ${PANGOLIN_CONFIG_DIR:-./config/pangolin}:/app/config
      # - ${CROWDSEC_CONFIG_DIR:-./cconfig/crowdsec}:/etc/crowdsec
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/"]
      interval: "3s"
      timeout: "3s"
      retries: 5

  gerbil:
    image: fosrl/gerbil:latest
    container_name: gerbil
    restart: unless-stopped
    depends_on:
      pangolin:
        condition: service_healthy
    command:
      - --reachableAt=http://gerbil:3003
      - --generateAndSaveKeyTo=/var/config/key
      - --remoteConfig=http://pangolin:3001/api/v1/gerbil/get-config
      - --reportBandwidthTo=http://pangolin:3001/api/v1/gerbil/receive-bandwidth
    volumes:
      - ${GERBIL_DATA_DIR:-./config}/:/var/config
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - ${GERBIL_WIREGUARD_PORT:-51820}:51820/udp
      ## Port for traefik because of the network_mode
      - ${GERBIL_HTTPS_PORT:-443}:443
      ## Port for traefik because of the network_mode
      - ${GERBIL_HTTP_PORT:-80}:80

  traefik:
    image: traefik:v3.3.3
    container_name: traefik
    restart: unless-stopped
    ## Ports appear on the gerbil service
    network_mode: service:gerbil
    depends_on:
      pangolin:
        condition: service_healthy
    command:
      - --configFile=/etc/traefik/traefik_config.yml
    environment:
      ## For Cloudflare DNS challenge
      CLOUDFLARE_DNS_API_TOKEN: ${CLOUDFLARE_DNS_CHALLENGE_TOKEN}
    volumes:
      - ${TRAEFIK_CONFIG_DIR:-./config/traefik}:/etc/traefik:ro
      ## Volume to store the Let's Encrypt certificates
      - ${LETSENCRYPT_CERT_DIR:-./config/letsencrypt}:/letsencrypt
      - ${TRAEFIK_LOGS_DIR:-./config/logs/traefik}:/var/log/traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 5s
      retries: 3

